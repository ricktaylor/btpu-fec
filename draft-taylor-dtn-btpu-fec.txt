



Delay/Disruption Tolerant Networking                           R. Taylor
Internet-Draft                                      Aalyria Technologies
Intended status: Standards Track                           11 March 2025
Expires: 12 September 2025


       Forward Error Correction for the Bundle Transfer Protocol
                    draft-taylor-dtn-btpu-fec-latest

Abstract

   This document defines an extension to the Bundle Transfer Protocol -
   Unidirectional, as described in [BTPU], to enable forward error
   correction (FEC) coding to be applied selectively to the transfer of
   individual bundles on a case by case basis.

   The definition and use of FEC follows the FECFRAME framework defined
   in [RFC6363], and this document introduces new Message types to BTPU
   in order to carry the FEC information as defined in the framework.

About This Document

   This note is to be removed before publishing as an RFC.

   The latest revision of this draft can be found at
   https://ricktaylor.github.io/btpu-fec/draft-taylor-dtn-btpu-fec.html.
   Status information for this document may be found at
   https://datatracker.ietf.org/doc/draft-taylor-dtn-btpu-fec/.

   Discussion of this document takes place on the Delay/Disruption
   Tolerant Networking Working Group mailing list (mailto:dtn@ietf.org),
   which is archived at https://mailarchive.ietf.org/arch/browse/dtn/.
   Subscribe at https://www.ietf.org/mailman/listinfo/dtn/.

   Source for this draft and an issue tracker can be found at
   https://github.com/ricktaylor/btpu-fec.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 12 September 2025.

Copyright Notice

   Copyright (c) 2025 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction
   2.  Conventions and Definitions
     2.1.  Mapping to RFC 6363
       2.1.1.  FEC Instance ID
   3.  Message Definitions
     3.1.  Pre-agreed FEC Source Message
     3.2.  Explicit FEC Source Message
     3.3.  Pre-agreed FEC Repair Message
     3.4.  Explicit FEC Repair Message
   4.  Security Considerations
   5.  IANA Considerations
   6.  References
     6.1.  Normative References
     6.2.  Informative References
   Appendix A.  Acknowledgments
   Author's Address

1.  Introduction

   There are a number of use-cases of the Bundle Transfer Protocol -
   Unidirectional [BTPU], where the use of transfer segment repetition
   as a mechanism to protect against the loss of frames can be
   considered sub-optimal.  This document describes an alternate
   mechanism based on forward error correction (FEC) coding, that
   requires increased computational complexity but fewer transmitted
   bits.  Rather than defining novel formats and registries for the
   variety of standardized FEC mechanisms, this document reuses the
   primitives and best practices of the FECFRAME framework, defined in
   [RFC6363].

2.  Conventions and Definitions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

2.1.  Mapping to RFC 6363

   This document follows the framework defined in [RFC6363], mapping the
   concepts defined in Section 2 of [RFC6363] to this document in the
   following manner:

    +=============+==================================================+
    | FECFRAME    | BTPU Definition                                  |
    | Definition  |                                                  |
    +=============+==================================================+
    | Application | Bundle                                           |
    | Data Unit   |                                                  |
    | (ADU)       |                                                  |
    +-------------+--------------------------------------------------+
    | ADU Flow    | This document considers all communication        |
    |             | between a sender and receivers as a single ADU   |
    |             | Flow, as the underlying BTPU link-layer protocol |
    |             | is expected to provide a single logical channel  |
    +-------------+--------------------------------------------------+
    | Application | BTPU                                             |
    | Protocol    |                                                  |
    +-------------+--------------------------------------------------+
    | FEC Repair  | The Pre-agreed FEC Repair Message (Section 3.3)  |
    | Packet      | and Explicit FEC Repair Message (Section 3.4)    |
    |             | act as the corresponding FEC Repair Packet       |
    +-------------+--------------------------------------------------+
    | FEC Source  | The Pre-agreed FEC Source Message (Section 3.1)  |
    | Packet      | and Explicit FEC Source Message (Section 3.2)    |
    |             | act as the corresponding FEC Source Packet       |
    +-------------+--------------------------------------------------+
    | Repair Flow | The series of Transfer Repair Messages act as    |
    |             | the Repair Flow                                  |
    +-------------+--------------------------------------------------+
    | Source Flow | The series of Transfer Segment and Transfer End  |
    |             | Messages act as the Source Flow                  |
    +-------------+--------------------------------------------------+
    | Transport   | The underlying BTPU link-layer protocol          |
    | Protocol    |                                                  |
    +-------------+--------------------------------------------------+

                                 Table 1

2.1.1.  FEC Instance ID

   Every Transfer Message includes an unsigned 8-bit FEC Instance ID
   field.  The value of this field indicates the FEC scheme and
   parameters to be used to recover missing parts of the Bundle, and the
   mapping from FEC Instance ID to the associated scheme and parameters
   MUST be pre-agreed at both sender and receiver using an out of band
   mechanism.  FEC Instance ID zero (0) indicates that no FEC mechanism
   is in use for the Transfer.

   The FEC Instance ID MUST be the same for all Messages concerned with
   an individual Transfer, i.e. the FEC scheme in use MUST NOT change
   mid-transfer.  If a receiver detects a change in FEC Instance ID
   during a Transfer, it MUST consider the Transfer cancelled, and
   ignore all future Messages associated with the Transfer.

   TODO - Stuff!

3.  Message Definitions

   All new Messages introduced in this document follow the common
   message format as defined in Section 4 of [BTPU].

   This specification deviates from the recommendation in Section 5.3 of
   [RFC6363] by placing the Explicit Source FEC Payload ID before the
   Source Data, as BTPU has no capability analogous to common header
   compression, as found in Robust Header Compression (ROHC) [RFC3095],
   and hence for consistency with other BTPU messages, the metadata
   precedes the data.

3.1.  Pre-agreed FEC Source Message

   The Pre-agreed FEC Source Message is used to encapsulate a source
   block of a Bundle Transfer that uses FEC with a pre-agreed
   configuration.

   A Pre-agreed FEC Source Message has a type of TBD1.  The Message
   Content field is formatted as follows:

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | Transfer Number                                               |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | FEC Inst. ID  |   Explicit Source FEC Payload ID ...          :
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                  ... Source Block Data ...                    :
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   Transfer Number:  The numeric identifier of the Transfer that this
      source block is part of, encoded as a 32-bit unsigned integer in
      network byte order.

   FEC Instance ID:  The identifier of the pre-agreed FEC scheme and
      configuration in use for the Transfer, encoded as an 8-bit
      unsigned integer in network byte order.

   Explicit Source FEC Payload ID:  The Explicit Source FEC Payload ID
      as defined in Section 5.3.1 of [RFC6363].

   Source Block Data:  The octets of the source block of the Transfer,
      with the length calculated as the Message content length excluding
      the length of the Transfer Number, FEC Instance ID, and Explicit
      Source FEC Payload ID.

3.2.  Explicit FEC Source Message

   The Explicit FEC Source Message is used to encapsulate a source block
   of a Bundle Transfer that uses FEC with an explicit FEC scheme and
   configuration.

   A Explicit FEC Source Message has a type of TBD2.  The Message
   Content field is formatted as follows:

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | Transfer Number                                               |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | FEC Enc. ID   | FEC-Scheme-Specific Information elements ...  :
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | Explicit Source FEC Payload ID ...                            :
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                  ... Source Block Data ...                    :
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   Transfer Number:  The numeric identifier of the Transfer that this
      source block is part of, encoded as a 32-bit unsigned integer in
      network byte order.

   FEC Encoding ID:  A FEC Encoding ID, as defined in Section 5.6 of
      [RFC6363], encoded as an 8-bit unsigned integer in network byte
      order.

   FEC-Scheme-Specific Information elements:  Zero or more FEC-Scheme-
      Specific Information elements as defined in Section 5.5 of
      [RFC6363].

   Explicit Source FEC Payload ID:  The Explicit Source FEC Payload ID
      as defined in Section 5.3.1 of [RFC6363].

   Source Block Data:  The octets of the source block of the Transfer,
      with the length calculated as the Message content length excluding
      the length of the Transfer Number, FEC Encoding ID, FEC-Scheme-
      Specific Information elements, and Explicit Source FEC Payload ID.

3.3.  Pre-agreed FEC Repair Message

   The Pre-agreed FEC Repair Message is used to encapsulate the repair
   symbols of a Bundle Transfer that uses FEC with a pre-agreed
   configuration.

   A Pre-agreed FEC Repair Message has a type of TBD3.  The Message
   Content field is formatted as follows:

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | Transfer Number                                               |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | FEC Inst. ID  |            Repair FEC Payload ID ...          :
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                  ... Repair Symbol Data ...                   :
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   Transfer Number:  The numeric identifier of the Transfer that this
      source block is part of, encoded as a 32-bit unsigned integer in
      network byte order.

   FEC Instance ID:  The identifier of the pre-agreed FEC scheme and
      configuration in use for the Transfer, encoded as an 8-bit
      unsigned integer in network byte order.

   Repair FEC Payload ID:  The Repair FEC Payload ID as defined in
      Section 5.4.1 of [RFC6363].

   Repair Symbol Data:  The octets of the repair symbols of the
      Transfer, with the length calculated as the Message content length
      excluding the length of the Transfer Number, FEC Instance ID, and
      Repair FEC Payload ID.

3.4.  Explicit FEC Repair Message

   The Explicit FEC Repair Message is used to encapsulate the repair
   symbols of a Bundle Transfer that uses FEC with an explicit FEC
   scheme and configuration.

   A Explicit FEC Repair Message has a type of TBD4.  The Message
   Content field is formatted as follows:

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | Transfer Number                                               |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | FEC Enc. ID   | FEC-Scheme-Specific Information elements ...  :
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | Repair FEC Payload ID ...                                     :
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                  ... Repair Symbol Data ...                   :
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   Transfer Number:  The numeric identifier of the Transfer that this
      source block is part of, encoded as a 32-bit unsigned integer in
      network byte order.

   FEC Encoding ID:  A FEC Encoding ID, as defined in Section 5.6 of
      [RFC6363], encoded as an 8-bit unsigned integer in network byte
      order.

   FEC-Scheme-Specific Information elements:  Zero or more FEC-Scheme-
      Specific Information elements as defined in Section 5.5 of
      [RFC6363].

   Repair FEC Payload ID:  The Repair FEC Payload ID as defined in
      Section 5.4.1 of [RFC6363].

   Repair Symbol Data:  The octets of the repair symbols of the
      Transfer, with the length calculated as the Message content length
      excluding the length of the Transfer Number, FEC Instance ID, and
      Repair FEC Payload ID.

4.  Security Considerations

   TODO Security

5.  IANA Considerations

   This document has no IANA actions.

6.  References

6.1.  Normative References

   [BTPU]     "Bundle Transfer Protocol - Unidirectional", February
              2025, <https://www.ietf.org/archive/id/draft-taylor-dtn-
              btpu-00.html>.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/rfc/rfc2119>.

   [RFC6363]  Watson, M., Begen, A., and V. Roca, "Forward Error
              Correction (FEC) Framework", RFC 6363,
              DOI 10.17487/RFC6363, October 2011,
              <https://www.rfc-editor.org/rfc/rfc6363>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/rfc/rfc8174>.

6.2.  Informative References

   [RFC3095]  Bormann, C., Burmeister, C., Degermark, M., Fukushima, H.,
              Hannu, H., Jonsson, L., Hakenberg, R., Koren, T., Le, K.,
              Liu, Z., Martensson, A., Miyazaki, A., Svanbro, K.,
              Wiebke, T., Yoshimura, T., and H. Zheng, "RObust Header
              Compression (ROHC): Framework and four profiles: RTP, UDP,
              ESP, and uncompressed", RFC 3095, DOI 10.17487/RFC3095,
              July 2001, <https://www.rfc-editor.org/rfc/rfc3095>.

Appendix A.  Acknowledgments

   TODO acknowledge.

Author's Address

   Rick Taylor
   Aalyria Technologies
   Email: rtaylor@aalyria.com
